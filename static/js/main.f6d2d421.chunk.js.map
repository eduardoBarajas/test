{"version":3,"sources":["assets/images/delivery_man.png","serviceWorker.js","components/shared/router_button/router_button.js","components/shared/dropdown_button/dropdown_button.js","components/products/product_reviews/product_review.js","components/shared/quantity_selector/quantity_selector.js","components/products/product_details/product_details.js","components/stores/stores_list/stores_list.js","components/orders/orders_list/orders_list.js","components/shared/image_selector.tsx","components/stores/stores_form.tsx","services/general/map_service.js","components/shared/mapview/mapview.js","components/shared/flipcard/flipcard.js","services/general/firebase_storage_service.js","services/products/products_service.tsx","entities/product.tsx","components/products/products_form/products_form.js","helpers/forms_utils.js","components/products/productCard.tsx","components/products/productGrid.tsx","components/shared/MBottomNavigation.tsx","components/stores/store_cards.tsx","views/splash/splash.js","views/dashboards/client/orders/client_orders.js","entities/store.tsx","views/clients/products.tsx","hooks/ProductsHooks.tsx","views/dashboards/client/stores/client_stores.js","views/clients/index.tsx","views/dashboards/store/orders/store_orders.js","services/stores/stores_service.tsx","views/view_not_found/view_not_found.js","views/dashboards/store/add_product/add_product.js","views/general/login.tsx","components/shared/NavigationBar.tsx","assets/js/theme.tsx","views/stores/stores.tsx","hooks/StoresHooks.tsx","views/stores/orders.tsx","views/stores/products.tsx","views/stores/index.tsx","index.tsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","RouterButton","props","to","className","label","React","Component","ProductReview","QuantitySelector","cantidad_actual","precio_acumulado","descuento_acumulado","active_icon","cantidad","event_type","this","setState","precio_individual","descuento_individual","icon_classes","addIcon","removeIcon","data-product-price","data-compare-price","htmlFor","onClick","event","onValueChange","type","id","name","onChange","parseInt","currentTarget","value","min","ProductDetails","useSpring","opacity","from","div","style","src","StoresList","OrdersList","md5","require","initialState","resetState","images","reducer","action","filter","image","file","length","push","newState","useStyles","makeStyles","theme","root","width","gridList","flexWrap","transform","titleBar","background","grid_list_add_new_tile","add_image_icon","height","delete_imagen_icon","color","icon_camera","icon_camera_loading","animation","add_image_button","fontSize","backgroundColor","add_image_button_loading","ImageSelector","useReducer","undefined","dispatch","classes","imageUrl","useEffect","URL","revokeObjectURL","GridList","cols","key","Tooltip","title","Button","disabled","isUploading","size","aria-label","e","fileSelector","document","createElement","setAttribute","addEventListener","files","split","filename","filetype","Date","getTime","onImageSelected","createObjectURL","click","preventDefault","Typography","variant","map","Slide","indexOf","direction","in","mountOnEnter","unmountOnExit","alt","GridListTileBar","actionIcon","IconButton","isOpen","body","options","one","two","createStyles","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","inputTextField","StoresForm","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Paper","elevation","Stepper","orientation","index","Step","StepLabel","StepContent","step","Box","TextField","required","defaultValue","getStepContent","square","API","ACCESS_KEY","lat","lng","Observable","subscriber","axios","get","response","next","data","finally","complete","address","mapboxgl","accessToken","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","firebase","initializeApp","ref_location","a","ref","put","getDownloadURL","url","status","err","child","delete","message","id_store","product_id","product","post","Product","init_params","_id","unitPrice","available","description","store_id","creationDate","mainImage","product_type","backgroundTasks","uploadingImage","resetFormCount","form","toISOString","formIntegrity","tasks","fields","initState","StoreForm","money","location_state","useLocation","stepper","querySelector","getElementsByClassName","i","classList","remove","stepper_instance","MStepper","firstActive","validationFunction","stepperForm","activeStepContent","getAttribute","valido","valid","errorMessage","nombre","getElementById","descripcion","validateStepOne","wrongStep","M","toast","html","resetStepper","target","canSelect","btnLabel","concat","FirebaseStorageService","fileDelete","fileUpload","subscribe","pipe","take","isNaN","substr","parseFloat","ProductsService","saveProduct","maxWidth","ProductCard","Card","CardActionArea","CardMedia","component","CardContent","gutterBottom","CardActions","flexGrow","ProductGrid","products","forEach","Grid","item","xs","md","container","justify","bottom_navigation","overflow","zIndex","position","bottom","MBottomNavigation","optionSelected","setOptionSelected","history","useHistory","tab_options","TabOptions","option","BottomNavigationAction","icon","BottomNavigation","newView","pathname","display","details","flexDirection","content","flex","cover","backgroundSize","margin","controls","alignItems","paddingLeft","paddingBottom","playIcon","verificadoChip","activoChip","StoresFlipCard","flipped","mass","tension","friction","store","getName","Chip","avatar","Avatar","getVerified","getActive","Divider","Splash","timer","setTimeout","clearTimeout","onLoadingComplete","delivery_icon","ClientOrders","Store","active","logoImage","addressCoord","email","phones","verified","storeType","latitude","longitude","local","cellphone","paddingTop","Products","setProducts","subscription","getProductsByIdStore","getAllProducts","unsubscribe","useGetProducts","Container","ClientStores","IndexClients","useRouteMatch","path","tabs","animated","Id","exact","StoreOrders","ViewNotFound","marginLeft","Copyright","align","Link","href","getFullYear","paper","palette","secondary","main","submit","LogIn","noValidate","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","mt","ButtonGroup","menuButton","NavigationBar","AppBar","Toolbar","edge","createMuiTheme","primary","red","A400","default","paddingRight","grid","fab","right","Stores","stores","setStores","StoresService","getStoresByIdStore","useGetStoresById","store_elements","getId","Fab","Orders","anim_props","IndexStore","form_mode","App","showSplash","setSplash","loading_state","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","process","origin","fetch","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6d2d421.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delivery_man.4b2e2321.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RouterButton = (props) => {\r\n    return (\r\n        <Link to={props.to} className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary\">{props.label}</Link>\r\n    );\r\n}\r\n\r\nexport default RouterButton;","import React, {Component} from 'react';\r\n\r\nclass DropdownButton extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            option_selected: {id: -1, label: 'Filtrar'}\r\n        }\r\n\t}\r\n\r\n    componentDidMount() {\r\n        let dropdown = document.getElementById(this.props.id);\r\n        console.log(dropdown);\r\n        //window.M.Dropdown.init(dropdown);\r\n        window.M.AutoInit();\r\n    }\r\n\r\n    onOptionClick(event) {\r\n        let current_option_selected = this.state.option_selected;\r\n        if (current_option_selected.id != parseInt(event.target.getAttribute('tabindex'))) {\r\n            current_option_selected = {id: parseInt(event.target.getAttribute('tabindex')), label: event.target.textContent}\r\n            this.setState({option_selected: current_option_selected});\r\n            this.props.onDropdownOptionSelected({dropdown_id: this.props.id, option: current_option_selected});\r\n        }\r\n    }\r\n\r\n\trender() {\r\n        let btn_dropdown_classes = 'dropdown-trigger waves-effect waves-light btn-flat ';\r\n        btn_dropdown_classes += (this.props.classes != null) ? this.props.classes : '';\r\n        let dropdown_options = this.props.options.map((option) => {\r\n            return <li key={this.props.options.indexOf(option)} tabIndex={option.id}><a onClick={(event) => { this.onOptionClick(event)}} tabIndex={option.id}>{option.label}</a></li>;\r\n        });\r\n        return (\r\n            <div className=\"dropdown_products_title\">\r\n                <a className={btn_dropdown_classes} data-target={this.props.id}><i className=\"material-icons right\">arrow_drop_down</i>{this.state.option_selected.label}</a>\r\n                <ul id={this.props.id} className='dropdown-content'>\r\n                    {dropdown_options}\r\n                </ul>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\nexport default DropdownButton;","import React, {Component} from 'react';\r\nimport './product_review.css';\r\n\r\nclass ProductReview extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n\t}\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\trender() {\r\n        \r\n        return (\r\n            <div className=\"white_background\">\r\n                <div className=\"product_review_content\">\r\n                    <span>\r\n                        <i className=\"material-icons\">star</i>\r\n                        <i className=\"material-icons\">star</i>\r\n                        <i className=\"material-icons\">star</i>\r\n                        <i className=\"material-icons\">star</i>\r\n                        <i className=\"material-icons\">star</i>\r\n                    </span>\r\n                    <h5 className=\"product_review_title\">\r\n                        Testing a review\r\n                    </h5>\r\n                    <span className=\"product_review_creator\">\r\n                        <strong>\r\n                            tester\r\n                        </strong>\r\n                        <strong>\r\n                            Aug 19, 2020\r\n                        </strong>\r\n                    </span>\r\n                    <p className=\"product_review_content\">\r\n                        lorepseum asdoasdkoasd\r\n                    </p>\r\n                </div>\r\n                <hr className=\"w-90 margin-center hr-no-margin\"/>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\nexport default ProductReview;","import React, {Component} from 'react';\r\nimport './quantity_selector.css';\r\n\r\nclass QuantitySelector extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cantidad_actual: 0,\r\n            precio_acumulado: 0,\r\n            descuento_acumulado: 0,\r\n            active_icon: 'none'\r\n        }\r\n\t}\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onValueChange(cantidad, event_type) {\r\n        if (cantidad >= 0) {\r\n            this.setState({precio_acumulado: cantidad * this.props.precio_individual, descuento_acumulado: cantidad * this.props.descuento_individual, \r\n                cantidad_actual: cantidad, active_icon: event_type});\r\n        }\r\n    }\r\n\r\n\trender() {\r\n        let icon_classes = {addIcon: 'unselectable material-icons add', removeIcon: 'unselectable material-icons remove'};\r\n        if (this.state.active_icon == 'addIcon') \r\n            icon_classes.addIcon += ' active_quantity';\r\n        if (this.state.active_icon == 'removeIcon') \r\n            icon_classes.removeIcon += ' active_quantity';\r\n        return (\r\n            <div className=\"price-quantity-wrapper primary-text-color \">\r\n                <div className=\"price-wrapper\">\r\n                    <label>Precio</label>\r\n                    <span className=\"price\" data-product-price=\"\">\r\n                        ${this.state.precio_acumulado}\r\n                    </span>\r\n                    {this.state.descuento_acumulado > 0 &&\r\n                        <s data-compare-price=\"\">${this.state.descuento_acumulado}</s>\r\n                    }\r\n                </div>\r\n                <div className=\"input-field quantity-counter\">\r\n                    <label htmlFor=\"Quantity\">Cantidad</label>\r\n                    <i className={icon_classes.removeIcon} onClick={(event) => {this.onValueChange(this.state.cantidad_actual - 1, 'removeIcon')}}>remove_circle_outline</i>\r\n                    <input type=\"number\" id=\"Quantity\" name=\"quantity\" onChange={(event) => {this.onValueChange(parseInt(event.currentTarget.value, 'onchange'))}}value={this.state.cantidad_actual} min=\"0\"/>\r\n                    <i className={icon_classes.addIcon} onClick={(event) => {this.onValueChange(this.state.cantidad_actual + 1, 'addIcon')}}>add_circle_outline</i>\r\n                </div>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\nexport default QuantitySelector;","import React from 'react';\r\nimport './product_details.css';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport {ProductReview, QuantitySelector} from '../../components';\r\n\r\nconst ProductDetails = () => {\r\n    const props = useSpring({opacity: 1, from: {opacity: 0}});\r\n\t/*const props = useSpring({\r\n        from: { left: '0%', top: '0%', width: '0%', height: '0%', background: 'lightgreen' },\r\n        to: async next => {\r\n          while (1) {\r\n            await next({ left: '0%', top: '0%', width: '100%', height: '100%', background: 'lightblue' })\r\n            await next({ height: '50%', background: 'lightgreen' })\r\n            await next({ width: '50%', left: '50%', background: 'lightgoldenrodyellow' })\r\n            await next({ top: '0%', height: '100%', background: 'lightpink' })\r\n            await next({ top: '50%', height: '50%', background: 'lightsalmon' })\r\n            await next({ width: '100%', left: '0%', background: 'lightcoral' })\r\n            await next({ width: '50%', background: 'lightseagreen' })\r\n            await next({ top: '0%', height: '100%', background: 'lightskyblue' })\r\n            await next({ width: '100%', background: 'lightslategrey' })\r\n          }\r\n        },\r\n      })\r\n    */\r\n    return (\r\n        <div className=\"product-details-container prodcut-details-parent-div\">\r\n            <animated.div className=\"product-details-container overlay\" style={props}>\r\n                <div className=\"row product-details-content mb-0\">\r\n                    <div className=\"col s12 offset-m2 m8 no-padding\">\r\n                        <div className=\"card grey lighten-5 no-margin\">\r\n                            <div className=\"card-content white-text no-padding\">\r\n                                <div className=\"row mb-0 mx-0\">\r\n                                    <div className=\"col s12 m4 no-padding\">\r\n                                        <img className=\"product_image_details responsive-img\" src=\"https://www.educaciontrespuntocero.com/wp-content/uploads/2019/06/homer.gif\"/>\r\n                                        <div className=\"product_name_details\">\r\n                                            <span className=\"card-title primary-text-color\">Card Title</span>\r\n                                            <div className=\"row quantity_selector_container\">\r\n                                                <QuantitySelector precio_individual={60.00} descuento_individual={100.00} />\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <a className=\"w-100 waves-effect waves-light purple darken-1 btn\"><i className=\"material-icons right\">add_shopping_cart</i>Agregar al carrito</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col s12 m8\">\r\n                                        <div className=\"row mx-1 my-1\">\r\n                                            <p className=\"primary-text-color\">I am a very simple card. I am good at containing small bits of information.\r\n                                            I am convenient because I require little markup to use effectively.</p>\r\n                                        </div>\r\n                                        <div className=\"row white-text green-background z-depth-2 reviews_container mx-1 my-1\">\r\n                                            <div className=\"product_review_content\">\r\n                                                <h5>Resenias del producto</h5>\r\n                                                <span>\r\n                                                    <i className=\"material-icons\">star</i>\r\n                                                    <i className=\"material-icons\">star</i>\r\n                                                    <i className=\"material-icons\">star</i>\r\n                                                    <i className=\"material-icons\">star</i>\r\n                                                    <i className=\"material-icons\">star</i>\r\n                                                    <span>Based on 22 reviews</span>\r\n                                                </span>\r\n                                                <hr className=\"hr-no-margin\"/>\r\n                                            </div>\r\n                                            <div className=\"content primary-text-color\">\r\n                                                <ProductReview/>\r\n                                                <ProductReview/>\r\n                                                <ProductReview/>\r\n                                                <ProductReview/>\r\n                                                <ProductReview/>\r\n                                                <ProductReview/>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </animated.div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default ProductDetails;","import React from 'react';\r\n\r\nconst StoresList = (props) => {\r\n    return (\r\n        <h1 className=\"animate__animated animate__fadeIn\">Tiendas</h1>\r\n    );\r\n}\r\n\r\nexport default StoresList;","import React from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nfunction OrdersList() {\r\n  const props = useSpring({opacity: 1, from: {opacity: 0}})\r\n  return <animated.div style={props}>Orders</animated.div>\r\n}\r\n\r\nexport default OrdersList;","import React, {useReducer, useEffect} from 'react';\r\nimport { Button, GridList, GridListTileBar, IconButton, makeStyles, Slide, Tooltip, Typography } from '@material-ui/core';\r\nimport GridListTile from '@material-ui/core/GridListTile/GridListTile';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nconst md5 = require('md5');\r\n\r\nconst initialState = () => {\r\n    return {\r\n        resetState: 0,\r\n        images: []\r\n    }\r\n}\r\n\r\nconst reducer = (state: any, action: any) => {\r\n    switch (action.type) {\r\n        case 'ImageSelected': {\r\n            // checamos que no este en el arreglo\r\n            let nImages = state.images.filter((image: {file: any, name: string}) => {\r\n                return (image.file == action.file);\r\n            });\r\n            if (nImages.length > 0) {\r\n                console.log('ya estaba agregada la imagen');\r\n                return {...state};\r\n            }\r\n            state.images.push({file: action.file, name: action.name});\r\n            return {...state};\r\n        }\r\n        case 'updateResetState': {\r\n            return {...state, resetState: action.newState, image: {file: '', name: ''}};\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    gridList: {\r\n      flexWrap: 'nowrap',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n      transform: 'translateZ(0)',\r\n      width: '100%'\r\n    },\r\n    titleBar: {\r\n      background:\r\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n    grid_list_add_new_tile: {\r\n        width: 'auto!important',\r\n    },\r\n    add_image_icon: {\r\n        width: '3em',\r\n        height: '3em'\r\n    },\r\n    delete_imagen_icon: {\r\n        color: 'white'\r\n    },\r\n    '@keyframes color_change': {\r\n        from: { color: 'white', width: '3em', height: '3em'},\r\n        to: { color: 'rgba(114, 5, 182, 0.8)', width: '2.8em', height: '2.8em' }\r\n    },\r\n    '@-webkit-keyframes color_change': {\r\n        from: { color: 'white', width: '3em', height: '3em'},\r\n        to: { color: 'rgba(114, 5, 182, 0.8)', width: '2.8em', height: '2.8em' }\r\n    },\r\n    icon_camera: {\r\n        width: '3em!important',\r\n        height: '3em!important'\r\n    },\r\n    icon_camera_loading: {\r\n        animation: 'color_change 1s infinite alternate'\r\n    },\r\n    add_image_button: {\r\n        width: '100%',\r\n        height: '100%',\r\n        fontSize: '1.1rem',\r\n        backgroundColor: 'rgba(56,142,60 ,1)!important',\r\n        color: 'white!important'\r\n    },\r\n    add_image_button_loading: {\r\n        backgroundColor: 'whitesmoke!important',\r\n        color: 'rgba(114, 5, 182, 0.8)!important'\r\n    },\r\n    'add_image_button:hover': {\r\n        color: 'rgba(114, 5, 182, 0.8)!important',\r\n        backgroundColor: 'whitesmoke!important'\r\n    }\r\n}));\r\n\r\nexport interface ImageSelectorProps {\r\n    resetState: number,\r\n    imageUrl: string,\r\n    onImageSelected: any,\r\n    isUploading: boolean\r\n}\r\n\r\nconst ImageSelector = (props: ImageSelectorProps) => {\r\n    const [state, dispatch] = useReducer(reducer, undefined, initialState);\r\n    const classes = useStyles();\r\n    // cuando el padre modifique su estado de reset se debe notificar a este componente, una vez se compruebe no son el mismo se reinicia este componenete, \r\n    // el estado inicial de este componente debe ser menor al del padre para que se pueda asegurar una diferencia.\r\n    if (props.resetState != state.resetState) {\r\n        dispatch({type: 'updateResetState', newState: props.resetState});\r\n    }\r\n    if (props.imageUrl != '' && state.image.file == '') {\r\n        dispatch({type: 'ImageSelected', file: props.imageUrl, name: 'imagen_guardada'});\r\n    }\r\n    useEffect( () => {\r\n        return () => {\r\n            // Anything in here is fired on component unmount.\r\n            console.log(\"UNMOUNT: ImageUploader\");\r\n            // liberamos la memoria utilizada para mostrar la imagen\r\n            if (state.image.file != null) \r\n                URL.revokeObjectURL(state.image.file);\r\n        }\r\n    }, []);\r\n\r\n    /*\r\n    <div className=\"row\">\r\n            <div className=\"col s12 m4 l4\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-image\">\r\n                        <img className=\"responsive-img\" src={state.image.file}/>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <p className=\"image_details_text_title\">Resolucion Permitida</p>\r\n                        <p className=\"image_details_text_body\">256px * 256px</p>\r\n                    </div>\r\n                    <div className=\"card-action no-padding\">\r\n                        {(props.isUploading) && \r\n                            <Spinner label=\"Subiendo imagen\" size=\"small\"/>\r\n                        }\r\n                        {(!props.isUploading) &&\r\n                            <a className={`waves-effect waves-light w-100 btn ${(props.canSelect) ? '' : 'disabled'}`} onClick={(e) => {\r\n                                fileSelector = document.createElement('input');\r\n                                fileSelector.setAttribute('type', 'file');\r\n                                fileSelector.setAttribute('multiple', 'multiple');\r\n                                fileSelector.addEventListener('change', (e) => {\r\n                                    // se obtiene el nombre y el tipo de archivo.\r\n                                    let [filename, filetype] = fileSelector.files[0].name.split('.');\r\n                                    // se crea el nuevo nombre utilizando el tiempo para hacerlo unico.\r\n                                    filename = `${md5(filename + new Date().getTime())}.${filetype}`;\r\n                                    props.onImageSelected(fileSelector.files[0], filename);\r\n                                    dispatch({type: 'ImageSelected', file: URL.createObjectURL(fileSelector.files[0]), name: filename});\r\n                                });\r\n                                fileSelector.click();\r\n                            }}><i className=\"material-icons left\">camera_alt</i>Selecciona un logo</a>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    */\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <GridList className={classes.gridList} cols={2.5}>\r\n            <GridListTile key={0} className={classes.grid_list_add_new_tile}>\r\n                <Tooltip title=\"Delete\">\r\n                    <Button disabled={props.isUploading} className={'add_image_button ' + (props.isUploading ? 'add_image_button_loading' : '')} size=\"medium\" color=\"primary\" aria-label=\"add\" onClick={(e) => {\r\n                        let fileSelector = document.createElement('input');\r\n                        fileSelector.setAttribute('type', 'file');\r\n                        fileSelector.setAttribute('multiple', 'multiple');\r\n                        fileSelector.addEventListener('change', (e) => {\r\n                            if (fileSelector.files != null) {\r\n                                 // se obtiene el nombre y el tipo de archivo.\r\n                                let [filename, filetype] = fileSelector.files[0].name.split('.');\r\n                                // se crea el nuevo nombre utilizando el tiempo para hacerlo unico.\r\n                                filename = `${md5(filename + new Date().getTime())}.${filetype}`;\r\n                                props.onImageSelected(fileSelector.files[0], filename);\r\n                                dispatch({type: 'ImageSelected', file: URL.createObjectURL(fileSelector.files[0]), name: filename});\r\n                            }\r\n                        });\r\n                        fileSelector.click();\r\n                        e.preventDefault();\r\n                    }}>\r\n                        <div>\r\n                            <PhotoCameraIcon className={'icon_camera ' + (props.isUploading ? 'icon_camera_loading' : '')} />\r\n                            <Typography variant=\"body2\">{(props.isUploading ? 'Cargando...' : 'Nueva Imagen')}</Typography>\r\n                        </div>\r\n                    </Button>\r\n                </Tooltip>\r\n            </GridListTile>\r\n            {state.images.map((image: {file: any, name: string}) => (\r\n                <Slide key={state.images.indexOf(image) + 1} direction=\"left\" in={true} mountOnEnter unmountOnExit>\r\n                    <GridListTile>\r\n                        <img src={image.file} alt={`Imagen${state.images.indexOf(image)}`} />\r\n                        <GridListTileBar\r\n                            title={`Imagen ${state.images.indexOf(image) + 1}`}\r\n                            className={classes.titleBar}\r\n                            actionIcon={\r\n                            <IconButton onClick={() => {\r\n                                dispatch({type: 'alertDialogShow', isOpen: true, title: 'Eliminar imagen', body: 'Deseas eliminar esta imagen?', options: {one: {label: 'Cancelar', value: ''}, two: {label: 'Eliminar', value: state.images.indexOf(image)}}});\r\n                            }} className={classes.delete_imagen_icon} aria-label={`eliminar foto`}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                            }\r\n                        />\r\n                    </GridListTile>\r\n                </Slide>\r\n            ))}\r\n        </GridList>\r\n    )\r\n};\r\n\r\nexport default ImageSelector;","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, TextField } from '@material-ui/core';\r\nimport ImageSelector from '../shared/image_selector';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n      padding: theme.spacing(3),\r\n    },\r\n    inputTextField: {\r\n      width: '100%'\r\n    }\r\n  }),\r\n);\r\n\r\nfunction getSteps() {\r\n  return ['Datos de la tienda', 'Contacto', 'Ubicacion (Direccion)'];\r\n}\r\n\r\nfunction getStepContent(step: number, classes: any) {\r\n  switch (step) {\r\n    case 0:\r\n      return (\r\n        <Box>\r\n          <TextField\r\n            required\r\n            id=\"nameText\"\r\n            label=\"Nombre Requerido\"\r\n            className={classes.inputTextField}\r\n            defaultValue=\"\"\r\n          />    \r\n          <TextField\r\n            required\r\n            id=\"descriptionText\"\r\n            label=\"Descripcion Requerida\"\r\n            className={classes.inputTextField}\r\n            defaultValue=\"\"\r\n          />\r\n          <ImageSelector resetState={0} imageUrl={''} isUploading={true} onImageSelected={(file: any, name: string) => {\r\n\r\n          }}/>\r\n        </Box>)\r\n    case 1:\r\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\r\n    case 2:\r\n      return `Try out different ad text to see what brings in the most customers,\r\n              and learn how to enhance your ads using features like ad extensions.\r\n              If you run into any problems with your ads, find out how to tell if\r\n              they're running and how to resolve approval issues.`;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport interface StoreFormProps {\r\n  form_mode: string\r\n}\r\n\r\nconst StoresForm = (props: StoreFormProps) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              {getStepContent(index, classes)}\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Reset\r\n          </Button>\r\n        </Paper>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StoresForm;","import { Observable } from 'rxjs';\r\nimport axios from 'axios';\r\nconst API = 'http://api.positionstack.com/v1/';\r\nconst ACCESS_KEY = '5a975ee81985652612fc0e71ec038034';\r\n\r\nclass MapService {\r\n    \r\n    constructor () {\r\n\r\n    }\r\n\r\n    getAddressFromCoord(lat, lng) {\r\n        return new Observable(subscriber => {\r\n            axios.get(`${API}reverse?access_key=${ACCESS_KEY}&query=${lat},${lng}`)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    getCoordFromAddress(address) {\r\n        return new Observable(subscriber => {\r\n            axios.get(`${API}forward?access_key=${ACCESS_KEY}&query=${address},Ensenada&country=MX&region=Baja+California`)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default new MapService();\r\n  ","import React, {useReducer, useEffect, useRef} from 'react';\r\nimport { Observable } from 'rxjs';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './mapview.css';\r\nimport MapService from '../../../services/general/map_service';\r\nimport { take } from 'rxjs/operators';\r\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiZWR1MjMiLCJhIjoiY2psa2lpNTRzMG43azNrbzU2emYxaThtNiJ9.j20WpkbxDZbaszbFUToebg';\r\nconst md5 = require('md5');\r\n\r\nconst initialState = () => {\r\n    return {\r\n        lng: -116.563056,\r\n        lat: 31.852508,\r\n        zoom: 14,\r\n        resized: false,\r\n        address: '',\r\n        openAutoComplete: false,\r\n        address_locations: []\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'resizeMap': {\r\n            return {...state, resized: action.resized};\r\n        }\r\n        case 'coordChange': {\r\n            return {...state, lng: action.lng, lat: action.lat, address: action.address};\r\n        }\r\n        case 'addressChange': {\r\n            return {...state, address: action.address};\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst MapView = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, undefined, initialState);\r\n    let mapContainer = null;\r\n    useEffect( () => {\r\n        console.log('se esta inciializando el mapbiew');\r\n        var elem = document.getElementById('address_input');\r\n        var limites_mapa = [\r\n            [-116.835714, 31.488703], // Southwest coordinates\r\n            [-116.233085, 32.127540] // Northeast coordinates\r\n        ];\r\n        const map = new mapboxgl.Map({\r\n            container: mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [state.lng, state.lat],\r\n            zoom: state.zoom,\r\n            maxBounds: limites_mapa\r\n        });\r\n        var popup = new mapboxgl.Popup({ closeOnClick: false })\r\n            .setHTML(\r\n                ReactDOMServer.renderToStaticMarkup(\r\n                    <div>\r\n                        <p style={{color: 'black'}}>Elige una ubicacion</p>\r\n                    </div>\r\n                )\r\n            );\r\n        var marker = new mapboxgl.Marker({\r\n            draggable: true\r\n        })\r\n        .setLngLat([state.lng, state.lat])\r\n        .setPopup(popup)\r\n        .addTo(map);\r\n        \r\n        function onDragEnd() {\r\n            var lngLat = marker.getLngLat();\r\n            console.log(lngLat);\r\n            MapService.getAddressFromCoord(lngLat.lat, lngLat.lng).pipe(take(1)).subscribe({\r\n                next(response) { \r\n                    if (response.data[0] != null) {\r\n                        popup.setHTML(\r\n                            ReactDOMServer.renderToStaticMarkup(\r\n                                <div>\r\n                                    <p style={{color: 'black'}}>{response.data[0].label}</p>\r\n                                </div>\r\n                            )\r\n                        );\r\n                        marker.setPopup(popup);\r\n                        dispatch({type: 'coordChange', lat: lngLat.lat, lng: lngLat.lng, address: response.data[0].label});\r\n                    }\r\n                        \r\n                },\r\n                error(err) { console.error('something wrong occurred: ' + err); }\r\n            });\r\n        }\r\n        marker.on('dragend', onDragEnd);\r\n        // Add geolocate control to the map.\r\n        map.addControl(\r\n            new mapboxgl.GeolocateControl({\r\n                positionOptions: {\r\n                enableHighAccuracy: true\r\n            },\r\n                trackUserLocation: true\r\n            })\r\n        );\r\n        \r\n        map.on('load', function() {\r\n            if (!state.resized) {\r\n                map.resize();\r\n                dispatch({type: 'resizeMap', resized: true});\r\n            }\r\n        });\r\n        window.M.Autocomplete.init(elem, {\r\n            minLength: 0,\r\n            onAutocomplete: (value) => {\r\n                let addresses = (sessionStorage.getItem('addresses') != null) ? JSON.parse(sessionStorage.getItem('addresses')) : null;\r\n                if (addresses != null) {\r\n                    addresses.forEach((addr) => {\r\n                        if (md5(addr.label) == md5(value)) {\r\n                            popup.setHTML(\r\n                                ReactDOMServer.renderToStaticMarkup(\r\n                                    <div>\r\n                                        <p style={{color: 'black'}}>{value}</p>\r\n                                    </div>\r\n                                )\r\n                            );\r\n                            marker.setLngLat([addr.longitude, addr.latitude])\r\n                            .setPopup(popup);\r\n                            map.flyTo({\r\n                                center: [addr.longitude, addr.latitude],\r\n                                essential: true // this animation is considered essential with respect to prefers-reduced-motion\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                dispatch({type: 'addressChange', address: value});\r\n            }\r\n        });\r\n        return () => {\r\n            // Anything in here is fired on component unmount.\r\n            console.log(\"UNMOUNT: MapView\");\r\n        }\r\n    }, []);\r\n    return (\r\n        <div className=\"row mb-0\">\r\n            <div className=\"col s12 m12\">\r\n                <div className=\"card default-primary-color darken-1 mapCard\">\r\n                    <div className=\"card-content mapCard-content white-text\">\r\n                        <span className=\"card-title mapCard-title\">\r\n                            <div className=\"card-panel input-field no-padding no-margin primary-text-color\">\r\n                                <i className=\"material-icons prefix input_direction_icon\">map</i>\r\n                                <input id=\"address_input\" type=\"text\" autoComplete=\"off\"  className=\"validate input_direction_map autocomplete\" value={state.address} onChange={(e) => {\r\n                                    dispatch({type: 'addressChange', address: e.target.value});\r\n                                }}/>\r\n                                <label className={`input_direction_label ${(state.address != null && state.address.length > 0) ? \"active\" : \"\"}`} htmlFor=\"address_input\">Direccion</label>\r\n                                <a id=\"btn_buscar_address\" className=\"waves-effect waves-teal btn-flat\" onClick={(e) => {\r\n                                    let autocomplete_element = document.getElementById('address_input');\r\n                                    MapService.getCoordFromAddress(state.address).pipe(take(1)).subscribe({\r\n                                        next(response) { \r\n                                            if (response.data.length > 0) {\r\n                                                // limpiamos el valor para que los resultados puedan ser mostrados.\r\n                                                autocomplete_element.value = '';\r\n                                                let instance_autocomplete = window.M.Autocomplete.getInstance(autocomplete_element);\r\n                                                let autocomplete_data = {};\r\n                                                response.data.forEach((addr) => {\r\n                                                    autocomplete_data[addr.label] = null;\r\n                                                });\r\n                                                instance_autocomplete.updateData(autocomplete_data);\r\n                                                sessionStorage.setItem('addresses', JSON.stringify(response.data));\r\n                                                autocomplete_element.click();\r\n                                            } else {\r\n                                                console.log('No se encontraron resultados');\r\n                                            }\r\n                                            console.log(response);\r\n                                        },\r\n                                        error(err) { console.error('something wrong occurred: ' + err); }\r\n                                    });\r\n                                }}><i className=\"material-icons right\">search</i></a>\r\n                            </div>\r\n                        </span>\r\n                        <div ref={el => mapContainer = el} className=\"mapContainer\"/>\r\n                    </div>\r\n                    <div className=\"card-action mapCardAction no-padding text-primary-color\">\r\n                        <a className=\"btn-guardar-map waves-effect waves-teal btn-flat\" onClick={(event) => {\r\n                            props.onMapLocationSelected({lat: state.lat, lng: state.lng, address: state.address});\r\n                        }}>CONFIRMAR</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>     \r\n    );\r\n}\r\n\r\nexport default MapView;","import React, {useReducer, useEffect, useState} from 'react';\r\nimport {\r\n    useLocation,\r\n    useHistory \r\n} from \"react-router-dom\";\r\nimport { useSpring, animated as a } from 'react-spring';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n});\r\n\r\nconst initialState = () => {\r\n    return {\r\n        busy: false,\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'busy': {\r\n            return {busy: action.busy};\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst FlipCard = (props) => {\r\n    //const [flipped, set] = useReducer(reducer, undefined, initialState);\r\n    const [flipped, set] = useState(false);\r\n    const { transform, opacity } = useSpring({\r\n        opacity: flipped ? 1 : 0,\r\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n        config: { mass: 5, tension: 500, friction: 80 }\r\n    });\r\n    const classes = useStyles();\r\n    return (\r\n        <div id={props.id} className={`col ${props.size}`} onClick={() => set(state => !state)}>\r\n            <div className={\"card \" + props.color}>\r\n                {!flipped &&\r\n                    <a.div style={{ opacity: opacity.interpolate(o => 1 - o), transform }} className=\"card-content white-text\">\r\n                        {props.front}\r\n                    </a.div>\r\n                }\r\n                {flipped &&\r\n                    <a.div style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}>\r\n                        {props.back}\r\n                    </a.div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default FlipCard;","import { Observable } from 'rxjs';\r\nimport firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB1LKzSELcOuXiHRhdxY2fXecKyaRotM6Y\",\r\n    authDomain: \"codens-18ad2.firebaseapp.com\",\r\n    databaseURL: \"https://codens-18ad2.firebaseio.com\",\r\n    projectId: \"codens-18ad2\",\r\n    storageBucket: \"codens-18ad2.appspot.com\",\r\n    messagingSenderId: \"311440713794\",\r\n    appId: \"1:311440713794:web:d22301ef7ab5af1f12a5db\"\r\n};\r\n\r\nclass FirebaseStorageService {\r\n    storage = null;\r\n    constructor() {\r\n        // Initialize Firebase\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.storage = firebase.storage();\r\n    }\r\n\r\n    fileUpload(ref_location, filename, file) {\r\n        return new Observable(async subscriber => {\r\n            this.storage.ref(`${ref_location}/${filename}`).put(file).then((response) => {\r\n                if (response.state === 'success') {\r\n                    this.storage.ref(`${ref_location}/${filename}`).getDownloadURL().then((url) => {\r\n                        subscriber.next({status: 'success', url: url.split('&token')[0]});\r\n                    }).catch((error) => {\r\n                        subscriber.error(error);\r\n                    }).finally(() => {\r\n                        subscriber.complete();\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                subscriber.error(err);\r\n            });\r\n           \r\n        });\r\n    }\r\n\r\n    fileDelete(ref_location, filename) {\r\n        return new Observable(subscriber => {\r\n            this.storage.ref(ref_location).child(filename).delete()\r\n            .then((response) => {\r\n                subscriber.next({status: 'success', message: 'Se elimino correctamente'});\r\n            }).catch((err) => {\r\n                subscriber.error(err);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default new FirebaseStorageService();","import { Observable } from 'rxjs';\r\nimport axios from 'axios';\r\nimport { Product } from '../../entities/entities';\r\nimport { IProduct } from '../../entities/product';\r\nconst API = 'http://192.168.0.2:4000/products';\r\n\r\nclass ProductsService {\r\n    \r\n    constructor () {\r\n\r\n    }\r\n\r\n    getAllProducts() {\r\n        const observable: Observable<IProduct[]> = new Observable(subscriber => {\r\n            axios.get(`${API}/getAllProducts/`)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n        return observable;\r\n    }\r\n\r\n    getProductsByIdStore(id_store: string) {\r\n        const observable: Observable<IProduct[]> = new Observable(subscriber => {\r\n            axios.get(`${API}/getProductsByIdStore/${id_store}`)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n        return observable;\r\n    }\r\n\r\n    getProductById(product_id: string) {\r\n        return new Observable(subscriber => {\r\n            axios.get(`${API}/getProductById/${product_id}`)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data[0]);\r\n            })\r\n            .catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    saveProduct(product: Product) {\r\n        return new Observable(subscriber => {\r\n            axios.post(`${API}/saveProduct`, {\r\n                product: product\r\n            }).then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data);\r\n            }).catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n  export default new ProductsService();\r\n  ","export interface IProduct {\r\n    _id: string;\r\n    name: string;\r\n    unitPrice: number;\r\n    available: boolean;\r\n    description: string;\r\n    store_id: string;\r\n    creationDate: string;\r\n    mainImage: string;\r\n    images: string[];\r\n    product_type: string;\r\n}\r\n\r\n\r\nclass Product {\r\n    private _id: string;\r\n    private name: string;\r\n    private unitPrice: number;\r\n    private available: boolean;\r\n    private description: string;\r\n    private store_id: string;\r\n    private creationDate: string;\r\n    private mainImage: string;\r\n    private images: string[];\r\n    private product_type: string;\r\n\r\n    constructor(init_params: IProduct) {\r\n        this._id = (init_params._id != null) ? init_params._id : '';\r\n        this.unitPrice = (init_params.unitPrice != null) ? init_params.unitPrice : 0.0;\r\n        this.available = (init_params.available != null) ? init_params.available : false;\r\n        this.description = (init_params.description != null) ? init_params.description : '';\r\n        this.name = (init_params.name != null) ? init_params.name : '';\r\n        this.store_id = (init_params.store_id != null) ? init_params.store_id : '';\r\n        this.creationDate = (init_params.creationDate != null) ? init_params.creationDate : '';\r\n        this.mainImage = (init_params.mainImage != null) ? init_params.mainImage : '';\r\n        this.images = (init_params.images != null) ? init_params.images : []; \r\n        this.product_type = (init_params.product_type != null) ? init_params.product_type : '';\r\n    }\r\n\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n}\r\n\r\nexport default Product;","import React, {useReducer, useEffect} from 'react';\r\nimport { take } from 'rxjs/operators';\r\nimport { concat } from 'rxjs';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {ImageSelector} from '../../components';\r\nimport {MONEY} from '../../../helpers/regex_constants';\r\nimport {parseMoneyInput} from '../../../helpers/forms_utils';\r\nimport FirebaseStorageService from '../../../services/general/firebase_storage_service';\r\nimport ProductsService from '../../../services/products/products_service';\r\nimport Product from '../../../entities/product';\r\nimport md5 from 'md5';\r\nconst STORE_LOGOS_REF = \"/deliveryapp/stores/\";\r\nconst ORIGINAL_FORM_STATE = 1;\r\n\r\nconst initialState = () => {\r\n    return {\r\n        backgroundTasks: {\r\n            uploadingImage: false,\r\n        },\r\n        resetFormCount: ORIGINAL_FORM_STATE, \r\n        store_id: '',\r\n        form: {\r\n            _id: undefined,\r\n            name: '',\r\n            description: '',\r\n            image: {name: '', url: ''},\r\n            creationDate: new Date().toISOString(),\r\n            unitPrice: ''\r\n        },\r\n        formIntegrity: ''\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'backgroundTasks': {\r\n            state.backgroundTasks = {...state.backgroundTasks, ...action.tasks};\r\n            return {...state};\r\n        }\r\n        case 'updateForm': {\r\n            state.form = {...state.form, ...action.fields};\r\n            return {...state};\r\n        }\r\n        case 'productSaved': {\r\n            let initState = initialState();\r\n            initState.store_id = state.store_id;\r\n            return {...initState, resetFormCount: state.resetFormCount + ORIGINAL_FORM_STATE};\r\n        }\r\n        case 'setProduct': {\r\n            //let store = new Store(action.store);\r\n            //state.form = {_id: store._id, name: store.name, description: store.description, image: {name: '', url: store.logoImage}, email: store.email,\r\n            //    telephone: store.phones.local, cellphone: store.phones.cellphone, lat: store.addressCoord.latitude, lng: store.addressCoord.longitude, address: store.address,\r\n            //    creationDate: store.creationDate};\r\n            //state.form.name = 'hole prros';\r\n            return {...state, store_id: action.store_id, formIntegrity: md5(state.form)};\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst validateStepOne = () => {\r\n    // validamos el nombre\r\n    let valid = {valid: true, errorMessage: ''};\r\n    let nombre = document.getElementById('linear_name').value;\r\n    let descripcion = document.getElementById('linear_description').value;\r\n    if (nombre.length <= 0)\r\n        valid = {valid: false, errorMessage: 'Ingresa un nombre valido'};\r\n    if (descripcion.length <= 0)\r\n        valid = {valid: false, errorMessage: 'Ingresa una descripcion valida'};\r\n    return valid;\r\n}\r\n\r\nconst StoreForm = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, undefined, initialState);\r\n    const location_state = useLocation().state;\r\n    console.log(state);\r\n    useEffect( () => {\r\n        if (state.resetFormCount == ORIGINAL_FORM_STATE) {\r\n            // cargamos la tienda en el estado.\r\n            let id_store = '';\r\n            if (location_state != null && location_state.store_id != null) {\r\n                id_store = location_state.store_id;\r\n                dispatch({type: 'setProduct', store_id: id_store});\r\n            }\r\n        } \r\n        const stepper = document.querySelector('.stepper');\r\n        const steps = document.getElementsByClassName('step');\r\n        for (let i = 0; i < steps.length; i++) {\r\n            steps[i].classList.remove('done');\r\n        }\r\n        const stepper_instance = new window.MStepper(stepper, {\r\n            // options\r\n            firstActive: 0, // this is the default\r\n            validationFunction: (stepperForm, activeStepContent) => {\r\n                let step = activeStepContent.getAttribute('step');\r\n                let valido = true;\r\n                switch (parseInt(step)) {\r\n                    case 1: valido = validateStepOne(); break;\r\n                }\r\n                if (!valido.valid) {\r\n                    stepper_instance.wrongStep();\r\n                    window.M.toast({html: valido.errorMessage, classes: 'error-toast'});\r\n                }\r\n                return valido.valid;\r\n            }\r\n        });\r\n        stepper_instance.resetStepper();\r\n        return () => {\r\n            // Anything in here is fired on component unmount.\r\n            console.log(\"UNMOUNT: NewProductForm\");\r\n        }\r\n    }, [state.resetFormCount]);\r\n    return (\r\n        <div>\r\n            <ul className=\"stepper linear\">\r\n                <li className=\"step active\">\r\n                    <div className=\"step-title waves-effect waves-dark\">Datos del producto</div>\r\n                    <div className=\"step-content\" step=\"1\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"linear_name\" name=\"linear_name\" type=\"text\" className=\"validate\" required value={state.form.name} onChange={(e) => {\r\n                                    dispatch({type: 'updateForm', fields: {'name': e.target.value}});\r\n                                }}/>\r\n                                <label className={`${state.form.name.length > 0 ? \"active\" : \"\"}`} htmlFor=\"linear_name\">Nombre</label>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"linear_description\" name=\"linear_description\" type=\"text\" className=\"validate\" value={state.form.description}  onChange={(e) => {\r\n                                    dispatch({type: 'updateForm', fields: {'description': e.target.value}});\r\n                                }} required/>\r\n                                <label className={`${state.form.description.length > 0 ? \"active\" : \"\"}`} htmlFor=\"linear_description\">Descripcion</label>\r\n                            </div>\r\n                            <div className=\"col s12\">\r\n                                <ImageSelector resetState={state.resetFormCount} imageUrl={state.form.image.url} canSelect={state.form.name.length > 0 && !state.backgroundTasks.uploadingImage} isUploading={state.backgroundTasks.uploadingImage} btnLabel={\"Agregar Imagen\"} onImageSelected={(file, name) => {\r\n                                    dispatch({type: 'backgroundTasks', tasks: { uploadingImage: true }});\r\n                                    if (state.form.image.name != '') {\r\n                                        // ya estaba una imagen antes por lo que se procede a eliminar.\r\n                                        const reemplazar_logo = concat(FirebaseStorageService.fileDelete(STORE_LOGOS_REF + state.store_id + '/products', state.form.image.name), FirebaseStorageService.fileUpload(STORE_LOGOS_REF + state.store_id + '/products', name, file));\r\n                                        reemplazar_logo.subscribe(\r\n                                            value => {\r\n                                                if (value.url != null) {\r\n                                                    window.M.toast({html: 'Se actualizo la imagen del producto', classes: 'success-toast'});\r\n                                                    dispatch({type: 'updateForm', fields: {'image': {name: name, url: value.url}}});\r\n                                                }\r\n                                            },\r\n                                            err => {console.log(err);  window.M.toast({html: 'Ocurrio un problema al subir la imagen', classes: 'error-toast'});},\r\n                                            () => dispatch({type: 'backgroundTasks', tasks: { uploadingImage: false }})\r\n                                        );\r\n                                    } else {\r\n                                        FirebaseStorageService.fileUpload(STORE_LOGOS_REF + state.store_id + '/products', name, file).pipe(take(1)).subscribe(\r\n                                            next => {\r\n                                                window.M.toast({html: 'Se selecciono la imagen', classes: 'success-toast'});\r\n                                                dispatch({type: 'updateForm', fields: {'image': {name: name, url: next.url}}});\r\n                                                dispatch({type: 'backgroundTasks', tasks: { uploadingImage: false }});\r\n                                            },\r\n                                            err => {console.log(err);  window.M.toast({html: 'Ocurrio un problema al subir la imagen', classes: 'error-toast'});}\r\n                                        );\r\n                                    }\r\n                                }}/>\r\n                            </div>\r\n                            <div className=\"input-field col s12\">\r\n                                <input id=\"linear_unit_price\" name=\"linear_unit_price\" type=\"text\" className=\"validate\" value={parseMoneyInput(state.form.unitPrice)}  onChange={(e) => {\r\n                                    dispatch({type: 'updateForm', fields: {'unitPrice': (e.target.value.length > 1) ? e.target.value.substr(1, e.target.value.length) : e.target.value}});\r\n                                }} required/>\r\n                                <label className={`${state.form.unitPrice.length > 0 ? \"active\" : \"\"}`} htmlFor=\"linear_unit_price\">Precio Unitario</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"step-actions\">\r\n                            <button className=\"waves-effect waves-dark btn blue next-step\">Continuar</button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"step\">\r\n                    <div className=\"step-title waves-effect waves-dark\">Finalizar</div>\r\n                    <div className=\"step-content\">\r\n                        <button className=\"waves-effect waves-dark btn blue\" onClick={(e) => {\r\n                            let product = new Product({_id: state.form._id, name: state.form.name, description: state.form.description, mainImage: state.form.image.url,\r\n                                creationDate: state.form.creationDate, unitPrice: parseFloat(state.form.unitPrice), store_id: state.store_id});\r\n                            // comparamos si se hicieron cambios\r\n                            if (state.form.formIntegrity != '') {\r\n                                // significa que si tenemos que validar que se hayan hecho cambios\r\n                                if (state.form.formIntegrity == md5(product)) {\r\n                                    console.log('No se hicieron cambios en el form');\r\n                                } else {\r\n                                    console.log('Se hicieron cambios en el form');\r\n                                }\r\n                            }\r\n                            ProductsService.saveProduct(product).pipe(take(1)).subscribe({\r\n                                next(response) { \r\n                                    window.M.toast({html: 'El producto fue con exito', classes: 'success-toast'});\r\n                                    dispatch({type: 'productSaved'});  \r\n                                },\r\n                                error(err) { \r\n                                    console.error('something wrong occurred: ' + err);\r\n                                    window.M.toast({html: 'Ocurrio un problema al agregar el producto, intenta de nuevo', classes: 'error-toast'});\r\n                                }\r\n                            });\r\n                            e.preventDefault();\r\n                        }}>Guardar</button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default StoreForm;","import {MONEY} from './regex_constants';\r\n\r\nexport const parseNumTel = (num) => {\r\n    let tel_string = '';\r\n    for (let x = 0; x < num.length; x++ ) {\r\n        switch (x) {\r\n            case 0: tel_string += '(' + num[x]; break;\r\n            case 2: tel_string += num[x] + ')'; break;\r\n            case 5: (num.length > 6) ? tel_string += num[x] + '-' : tel_string += num[x] + ''; break;\r\n            case 7: (num.length > 8) ? tel_string += num[x] + '-' : tel_string += num[x] + ''; break;\r\n            default: tel_string += num[x];\r\n        }\r\n    }\r\n    return tel_string;\r\n}\r\n\r\nexport const validateNumTel = (target) => {\r\n    let numbers = \"\";\r\n    for (let x = 0; x < target.value.length; x++ ) {\r\n        if (!isNaN(target.value[x]))\r\n            numbers += target.value[x];\r\n    }\r\n    if (numbers.length <= 10)\r\n        return {valid: true, value: numbers};\r\n    return {valid: false, value: ''};\r\n}\r\n\r\nexport const parseMoneyInput = (money) => {\r\n    return (money.length > 0 && !isNaN(money)) ? `$${money}` : ``;\r\n}","import React from 'react';\r\n\r\nimport { Product } from '../../entities/entities';\r\nimport { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nexport interface ProductCardProps  {\r\n    product: Product | undefined\r\n}\r\nconst CARD_COLORS = ['blue', 'orange', 'dark', 'purple', 'green'];\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n});\r\n\r\nconst ProductCard = (props: ProductCardProps) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"140\"\r\n                    image=\"http://www.pngall.com/wp-content/uploads/5/Serving-Food-PNG-Image-HD.png\"\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        Lizard\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n                        across all continents except Antarctica\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Share\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Learn More\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProductCard;","import React from 'react';\r\n\r\nimport ProductCard from './productCard';\r\nimport ProductDetails from './product_details/product_details';\r\nimport Home from '../../views/general/home';\r\nimport { Product } from '../../entities/entities';\r\nimport { createStyles, Grid, makeStyles, Paper, Theme } from '@material-ui/core';\r\n\r\nexport interface ProductListProps  {\r\n    products: Product[] | undefined\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    }\r\n  }),\r\n);\r\nconst ProductGrid = (props: ProductListProps) => {\r\n    console.log(props);\r\n    const classes = useStyles();\r\n    let food_img = 'https://i.pinimg.com/originals/eb/53/b5/eb53b5b9282e4c3a594025eb5029e0c4.jpg';\r\n    let products: JSX.Element[] = [];\r\n    if (props.products != undefined)\r\n        props.products.forEach((product: Product) => {\r\n            products.push(\r\n                <Grid key={product.id} item xs={6} md={3}>\r\n                    <Grid container justify=\"center\" spacing={1}>\r\n                        <Grid item>\r\n                            <ProductCard product={product} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        });\r\n    \r\n    return (\r\n        <Grid container className={classes.root} spacing={2}>\r\n           {products}\r\n        </Grid>  \r\n    );\r\n}\r\n\r\nexport default ProductGrid;","import { BottomNavigation, BottomNavigationAction, Box, SvgIconTypeMap, Tab, Tabs } from '@material-ui/core';\r\nimport React, {Component, useEffect, useState} from 'react';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\r\n\r\nconst useStyles = makeStyles({\r\n    bottom_navigation: {\r\n      overflow: 'hidden',\r\n      zIndex: 1,\r\n      position: 'fixed',\r\n      bottom: 0,\r\n      width: '100%'\r\n    },\r\n});\r\n\r\nexport interface MBottomNavigationProps {\r\n    Id: string,\r\n    TabOptions: {to: string, label: string, icon: JSX.Element}[]\r\n}\r\n\r\nconst MBottomNavigation = (props: MBottomNavigationProps) => {\r\n    const classes = useStyles();\r\n    const [optionSelected, setOptionSelected] = useState('');\r\n    const history = useHistory();\r\n    //const onTabClick = (event: React.MouseEvent<HTMLElement>, toUrl: string) => {\r\n    //    console.log(toUrl);\r\n        //setRedirect(toUrl);\r\n    //}\r\n    const handleChange = (event: React.ChangeEvent<{}>, newView: string) => {\r\n        console.log(newView);\r\n        history.push({pathname: newView});\r\n        setOptionSelected(newView);\r\n    };\r\n    useEffect(() => {\r\n        \r\n        return () => {\r\n\r\n        }\r\n    }, []);\r\n    \r\n    //let redirect = (redirectTo != '') ? <Redirect to={redirectTo} /> : null;\r\n    let redirect = null;\r\n    // generamos los links a partir del arreglo de opciones.\r\n    let tab_options: JSX.Element[] = [];\r\n    if (props.TabOptions != null) {\r\n        tab_options = props.TabOptions.map((option) => {\r\n            if (optionSelected == '' && props.TabOptions.indexOf(option) == 0) \r\n                setOptionSelected(option.to);\r\n            return <BottomNavigationAction value={option.to} key={props.TabOptions.indexOf(option)} className={(optionSelected == option.to) ? 'active' : ''}\r\n                label={option.label} icon={option.icon}/>;\r\n        });\r\n    }\r\n    //let tabs_classes = 'nav-content default-primary-color z-depth-4 ';\r\n    //tabs_classes += (this.props.bottomNavigation != null) ? 'bottom_navigation' : '';\r\n    return (\r\n        <Box>\r\n            <BottomNavigation\r\n                    value={optionSelected}\r\n                    onChange={handleChange}\r\n                    className={classes.bottom_navigation}\r\n                >\r\n                    {tab_options}\r\n            </BottomNavigation>\r\n        </Box>\r\n    );\r\n}\r\nexport default MBottomNavigation;","import { Avatar, Box, Button, Card, CardContent, CardMedia, Chip, createStyles, Divider, IconButton, Tab, Tabs, Theme, Typography } from '@material-ui/core';\r\nimport React, {Component, useEffect, useState} from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport { Store } from '../../entities/entities';\r\nimport { useSpring, animated as a } from 'react-spring';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: '100%'\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n      width: '60%',\r\n      backgroundSize: 'contain',\r\n      margin: '1em'\r\n    },\r\n    controls: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingLeft: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n      height: 38,\r\n      width: 38,\r\n    },\r\n    verificadoChip: {\r\n      marginTop: '0.25em',\r\n      marginBottom: '0.25em',\r\n      marginRight: '0.25em'\r\n    },\r\n    activoChip: {\r\n      marginTop: '0.25em',\r\n      marginBottom: '0.25em'\r\n    }\r\n  }),\r\n);\r\n\r\nexport interface StoresFlipCardProps {\r\n    id: string,\r\n    store: Store\r\n}\r\n\r\nconst StoresFlipCard = (props: StoresFlipCardProps) => {\r\n    const [flipped, set] = useState(false);\r\n    const { transform, opacity } = useSpring({\r\n        opacity: flipped ? 1 : 0,\r\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n        config: { mass: 5, tension: 500, friction: 80 }\r\n    });\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <div className={classes.details}>\r\n                <CardContent className={classes.content}>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {props.store.getName}\r\n                    </Typography>\r\n                    <Chip\r\n                      className={classes.verificadoChip}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      avatar={<Avatar>V</Avatar>}\r\n                      label={(props.store.getVerified) ? 'Verificado' : 'No verificado'}\r\n                      color={(props.store.getVerified) ? 'primary' : 'default'}\r\n                    />\r\n                    <Chip\r\n                      className={classes.activoChip}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      avatar={<Avatar>A</Avatar>}\r\n                      label={(props.store.getActive) ? 'Activo' : 'No activo'}\r\n                      color={(props.store.getActive) ? 'primary' : 'default'}\r\n                    />\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        Mac Miller\r\n                    </Typography>\r\n                </CardContent>\r\n                <Divider variant=\"middle\" />\r\n                <div className={classes.controls}>\r\n                    <Button color=\"secondary\">Editar</Button>\r\n                    <Button color=\"secondary\">Productos</Button>\r\n                </div>\r\n            </div>\r\n            <CardMedia\r\n                className={classes.cover}\r\n                image={'https://cdn.freebiesupply.com/logos/large/2x/wetransfer-logo-png-transparent.png'}\r\n                title=\"Logo tienda\"\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {StoresFlipCard};","import React from 'react';\r\nimport './splash.css';\r\nimport delivery_icon from '../../assets/images/delivery_man.png';\r\n\r\nconst Splash = (props) => {\r\n    let timer = setTimeout(() => {\r\n        clearTimeout(timer);\r\n        props.onLoadingComplete(false);\r\n    }, 1000);\r\n    return (\r\n        <div className=\"splash-screen default-primary-color  text-primary-color\">\r\n            <img alt=\"Icono de hombre haciendo una entrega\" className=\"splash-screen-logo\" src={delivery_icon}></img>\r\n            Por favor espera un momento en lo que carga la app.\r\n            <div className=\"loading-dot\">.</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Splash;","import React from 'react';\r\n\r\nimport {OrdersList} from '../../../../components/components';\r\n\r\nclass ClientOrders extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n\t}\r\n\r\n    onFilterChange(event) {\r\n        console.log(event);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        \r\n    }\r\n\r\n\trender() {\r\n        return (\r\n            <div>\r\n                <div className=\"container animate__animated animate__fadeIn\">\r\n                    <OrdersList/>\r\n                </div>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\n\r\nexport default ClientOrders;","export interface IStore {\r\n    _id: string;\r\n    name: string;\r\n    active: boolean;\r\n    description: string;\r\n    creationDate: string;\r\n    images: string[];\r\n    logoImage: string;\r\n    address: string;\r\n    addressCoord: {latitude: number, longitude: number};\r\n    email: string;\r\n    phones: {local: '', cellphone: ''};\r\n    verified: boolean;\r\n    storeType: string;   \r\n}\r\n\r\nclass Store {\r\n    private _id: string;\r\n    private name: string;\r\n    private active: boolean;\r\n    private description: string;\r\n    private creationDate: string;\r\n    private images: string[];\r\n    private logoImage: string;\r\n    private address: string;\r\n    private addressCoord: {latitude: number, longitude: number};\r\n    private email: string;\r\n    private phones: {local: '', cellphone: ''};\r\n    private verified: boolean;\r\n    private storeType: string;\r\n\r\n    constructor(init_params: IStore) {\r\n       this._id = (init_params._id != null) ? init_params._id : '';\r\n       this.name = (init_params.name != null) ? init_params.name : '';\r\n       this.active = (init_params.active != null) ? init_params.active : false;\r\n       this.description = (init_params.description != null) ? init_params.description : '';\r\n       this.creationDate = (init_params.creationDate != null) ? init_params.creationDate : '';\r\n       this.images = (init_params.images != null) ? init_params.images : [];\r\n       this.logoImage = (init_params.logoImage != null) ? init_params.logoImage : '';\r\n       this.address = (init_params.address != null) ? init_params.address : '';\r\n       this.addressCoord = (init_params.addressCoord != null) ? init_params.addressCoord : {latitude: 0, longitude: 0};\r\n       this.email = (init_params.email != null) ? init_params.email : '';\r\n       this.phones = (init_params.phones != null) ? init_params.phones : {local: '', cellphone: ''};\r\n       this.verified = (init_params.verified != null) ? init_params.verified : false;\r\n       this.storeType = (init_params.storeType != null) ? init_params.storeType : '';\r\n    }\r\n\r\n    get getId(): string {\r\n        return this._id;\r\n    }\r\n\r\n    get getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    get getVerified(): boolean {\r\n        return this.verified;\r\n    }\r\n\r\n    get getCreationDate(): string {\r\n        return this.creationDate;\r\n    }\r\n\r\n    get getActive(): boolean {\r\n        return this.active;\r\n    }\r\n\r\n    get getLogo(): string {\r\n        return this.logoImage;\r\n    }\r\n}\r\n\r\nexport default Store;","import { Box, Container, makeStyles } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport ProductsService from '../../services/products/products_service';\r\nimport {ProductsGrid, SearchFilterProducts} from '../../components/components';\r\nimport {useGetProducts} from '../../hooks/ProductsHooks';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n});\r\n\r\nconst Products = () => {\r\n    const classes = useStyles();\r\n    const onFilterChange = (event: Event) => {\r\n        console.log(event);\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    let products = useGetProducts(undefined);\r\n    return (\r\n        <Container maxWidth=\"xl\" className={classes.root}>\r\n            <ProductsGrid products={products}/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Products;","import { useEffect, useState } from \"react\";\r\nimport ProductsService from '../services/products/products_service';\r\nimport {Observable} from 'rxjs';\r\nimport { Product } from \"../entities/entities\";\r\nimport { IProduct } from \"../entities/product\";\r\n\r\nexport const useGetProducts = (id_store: string | undefined) => {\r\n    const [products, setProducts] = useState<Product[] | undefined>();\r\n    useEffect(() => {\r\n        let observable: Observable<IProduct[]>;\r\n        if (id_store != undefined) {\r\n            observable = ProductsService.getProductsByIdStore(id_store);\r\n        } else {\r\n            observable = ProductsService.getAllProducts();\r\n        }\r\n        let subscription = observable.subscribe({\r\n            next(products: IProduct[]) {\r\n                setProducts(products.map((product: IProduct) => {\r\n                    return new Product(product);\r\n                }));\r\n            },\r\n            error(err) {console.log('useGetProducts error: ' + err + ' STOREID:' + id_store); setProducts(undefined)}\r\n        });\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        };\r\n    }, []);\r\n  \r\n    return products;\r\n}","import React from 'react';\r\nimport {StoresList} from '../../../../components/components';\r\n\r\nclass ClientStores extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n\t}\r\n\r\n    onFilterChange(event) {\r\n        console.log(event);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        \r\n    }\r\n\r\n\trender() {\r\n        return (\r\n            <div>\r\n                <div className=\"container animate__animated animate__fadeIn\">\r\n                    <StoresList/>\r\n                </div>\r\n            </div>\r\n        );\r\n\t}\r\n}\r\n\r\nexport default ClientStores;","import React from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport {RouterButton, MTabs, MBottomNavigation} from '../../components/components';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    useRouteMatch,\r\n    Route,\r\n    useLocation,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport ClientOrders from '../dashboards/client/orders/client_orders';\r\nimport Products from './products';\r\nimport ClientStores from '../dashboards/client/stores/client_stores';\r\nimport {ProductDetails} from  '../../components/components';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nconst IndexClients = () => {\r\n    let { path, url } = useRouteMatch();\r\n    let location = useLocation();\r\n    const OrdersView = animated(ClientOrders);\r\n    const tabs: JSX.Element = <MBottomNavigation Id=\"tabs_productos_clientes\" TabOptions={[{to: `${url}/Productos`, label: 'Productos', icon: <FastfoodIcon/>}, {to: `${url}/Tiendas`, label: 'Tiendas', icon: <StoreIcon/>},\r\n        {to: `${url}/Ordenes`, label: 'Mis Ordenes', icon: <ListAltIcon/>}]}/>\r\n    return (\r\n        (location.pathname == '/Clientes') ? <Redirect to={\"/Clientes/Productos\"} /> :\r\n        <Box>\r\n            <Switch>\r\n                <Route exact path=\"/Clientes/Productos\">\r\n                    <Products/>\r\n                    {tabs}\r\n                </Route>\r\n                <Route exact path=\"/Clientes/detallesProducto\">\r\n                    <ProductDetails/>\r\n                </Route>\r\n                <Route exact path=\"/Clientes/Tiendas\">\r\n                    <ClientStores/>\r\n                    {tabs}\r\n                </Route>\r\n                <Route exact path=\"/Clientes/Ordenes\">\r\n                    <ClientOrders/>\r\n                    {tabs}\r\n                </Route>\r\n            </Switch>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default IndexClients;","import React from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nfunction StoreOrders(props) {\r\n  const anim_props = useSpring({opacity: 1, from: {opacity: 0}});\r\n  return (\r\n    <div>\r\n      <animated.div style={anim_props}>\r\n        Orders\r\n      </animated.div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoreOrders;","import { Observable } from 'rxjs';\r\nimport axios from 'axios';\r\nimport { Store } from '../../entities/entities';\r\nimport { IStore } from '../../entities/store';\r\nconst API = 'http://192.168.0.2:4000/stores';\r\n\r\nclass StoresService {\r\n    \r\n    constructor () {\r\n\r\n    }\r\n\r\n    getStoresByIdStore(id_store: string): Observable<IStore[]> {\r\n        return new Observable(subscriber => {\r\n            axios.get(`${API}/getStoresByIdStore`)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                \r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStoreById(store_id: string) {\r\n        return new Observable(subscriber => {\r\n            axios.get(`${API}/getStoreById/${store_id}`)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data[0]);\r\n            })\r\n            .catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    saveStore(store: Store) {\r\n        return new Observable(subscriber => {\r\n            axios.post(`${API}/saveStore`, {\r\n                store: store\r\n            }).then(function (response) {\r\n                console.log(response);\r\n                subscriber.next(response.data);\r\n            }).catch(function (error) {\r\n                subscriber.error(error);\r\n            }).finally(() => {\r\n                subscriber.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n}\r\n\r\n  export default new StoresService();\r\n  ","import React from 'react';\r\n\r\nconst ViewNotFound = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>\r\n                Pagina no encontrada.\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewNotFound;","import React, { useEffect } from 'react';\r\nimport '../add_store/add_store.css';\r\nimport {StoresForm} from '../../../../components/components';\r\nimport {Link} from \"react-router-dom\";\r\nimport {BaseView} from './../../../views';\r\nimport {ProductsForm} from './../../../../components/components';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    'addProductTitle': {\r\n        marginLeft: '0.5em'\r\n    }\r\n});\r\n\r\nconst AddProduct = (props) => {\r\n    useEffect(() => {\r\n        \r\n        return () => {\r\n            // Anything in here is fired on component unmount.\r\n            console.log(\"UNMOUNT: AddStore\");\r\n        }\r\n    }, []);\r\n    const classes = useStyles();\r\n    let title = '';\r\n    switch (props.form_mode.toUpperCase()) {\r\n        case 'CREATE': title = 'Agregar producto'; break;\r\n        case 'EDIT': title = 'Editar producto'; break;\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n           <h5 className={classes.addProductTitle}>{title}</h5>\r\n           <div className=\"row\">\r\n                <div className=\"col s12 m12\">\r\n                    <div className=\"card-panel\">\r\n                        <ProductsForm form_mode={props.form_mode}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default AddProduct;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport { RouterButton } from '../../components/components';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst LogIn = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n            Sign In\r\n            </Button>\r\n            <Grid container>\r\n                <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <ButtonGroup size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\r\n            <RouterButton to=\"/Clientes\" label=\"Clientes\"/>\r\n            <RouterButton to=\"/Tiendas\" label=\"Tiendas\"/>\r\n        </ButtonGroup>\r\n      </Box>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LogIn;","import { AppBar, Button, IconButton, makeStyles, Toolbar, Typography } from '@material-ui/core';\r\nimport React, { FunctionComponent } from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    useRouteMatch,\r\n    Route,\r\n    useLocation,\r\n    useHistory \r\n} from \"react-router-dom\";\r\n\r\n//import './navigation_bar.css';\r\n\r\n// solo deben estar agregado las direcciones donde se desee modificar el color del nav.\r\nconst NavColorByPath = {\r\n    '/Clientes/detallesProducto': 'accent-color'\r\n}\r\n\r\nexport interface NavigationBarProps {\r\n    userLoggued?: boolean\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst NavigationBar: React.FC<NavigationBarProps> = (props: NavigationBarProps) => {\r\n    let location = useLocation();\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    //let nav_color: string;\r\n    //let logo_or_back_btn: ;\r\n    //nav_color = (NavColorByPath[location.pathname] != null) ? NavColorByPath[location.pathname] : 'default-primary-color';\r\n    //logo_or_back_btn = (location.pathname == '/') ? <a id=\"logo-container\" href=\"#\" className=\"brand-logo\">Logo</a> :\r\n    //    <a className=\"back_button\" onClick={(event) => {history.goBack()}}><i className=\"material-icons\">arrow_back<span className=\"nav_bar_icon_text\"> Regresar </span></i></a>;\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    News\r\n                </Typography>\r\n                <Button color=\"inherit\">Login</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;\r\n\r\n\r\n\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  spacing: 0,\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\ntheme.spacing(0);\r\n\r\nexport default theme;","import React, { useEffect, useState } from 'react';\r\nimport { take } from 'rxjs/operators';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useGetStoresById } from '../../hooks/StoresHooks';\r\nimport { Container, createStyles, Fab, Grid, makeStyles, Theme } from '@material-ui/core';\r\nimport {StoresFlipCard} from '../../components/components';\r\nimport Store from '../../entities/store';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            paddingTop: '2em',\r\n            paddingBottom: '5em',\r\n            paddingLeft: '5%',\r\n            paddingRight: '5%'\r\n        },\r\n        grid: {\r\n            flexGrow: 1,\r\n        },\r\n        fab: {\r\n            position: 'fixed',\r\n            bottom: theme.spacing(10),\r\n            right: theme.spacing(4),\r\n        },\r\n    })\r\n);\r\n\r\n\r\nconst Stores = () => {\r\n    //const [stores, setStores] = useState([]);\r\n    let history = useHistory();\r\n    let stores = useGetStoresById('');\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n       \r\n        \r\n        return () => {\r\n            // Anything in here is fired on component unmount.\r\n            console.log(\"UNMOUNT: StoreStores\");\r\n            //feature_discover_btn.removeEventListener('click', (e) => { redirectByHistory(history, e) } );\r\n        }\r\n    }, []);\r\n    let store_elements: JSX.Element[] = [];\r\n    if (stores != undefined) {\r\n        stores.forEach((store: Store) => {\r\n            store_elements.push(\r\n                <Grid key={store.getId} item xs={12} md={4}>\r\n                    <Grid container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                        <Grid item className=\"w-100\">\r\n                            <StoresFlipCard id={'card-' + store.getId} store={store} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        });\r\n    }\r\n    console.log(stores);\r\n    return (\r\n        <Container maxWidth=\"xl\" className={classes.root}>\r\n            <Fab color=\"primary\" className={classes.fab} aria-label=\"Agregar Tienda\" onClick={(e) => {history.push('/Tiendas/AgregarTienda')}}>\r\n                <AddIcon />\r\n            </Fab>\r\n            <Grid justify=\"center\" alignItems=\"center\"  container spacing={2} className={classes.grid}>\r\n                {store_elements}\r\n            </Grid> \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Stores;","import { useEffect, useState } from \"react\";\r\nimport StoresService from '../services/stores/stores_service';\r\nimport {Observable} from 'rxjs';\r\nimport { Store } from \"../entities/entities\";\r\nimport { IStore } from \"../entities/store\";\r\n\r\nexport const useGetStoresById = (id_store: string) => {\r\n    const [stores, setStores] = useState<Store[] | undefined>();\r\n    useEffect(() => {\r\n        let observable: Observable<IStore[]>;\r\n        observable = StoresService.getStoresByIdStore(id_store);\r\n        let subscription = observable.subscribe({\r\n            next(stores: IStore[]) {\r\n                setStores(stores.map((store: IStore) => {\r\n                    return new Store(store);\r\n                }));\r\n            },\r\n            error(err) {console.log('useGetProducts error: ' + err + ' STOREID:' + id_store); setStores(undefined)}\r\n        });\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        };\r\n    }, []);\r\n    return stores;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { take } from 'rxjs/operators';\r\nimport {Link} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useSpring, animated} from 'react-spring';\r\nimport { useGetStoresById } from '../../hooks/StoresHooks';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n});\r\n\r\nconst Orders = () => {\r\n    //const [stores, setStores] = useState([]);\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n       \r\n        \r\n        return () => {\r\n            // Anything in here is fired on component unmount.\r\n            console.log(\"UNMOUNT: StoreStores\");\r\n            //feature_discover_btn.removeEventListener('click', (e) => { redirectByHistory(history, e) } );\r\n        }\r\n    }, []);\r\n    const anim_props = useSpring({opacity: 1, from: {opacity: 0}});\r\n    return (\r\n        <Container maxWidth=\"xl\" className={classes.root}>\r\n            <animated.div style={anim_props}>\r\n                Orders\r\n            </animated.div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Orders;","import React, { useEffect, useState } from 'react';\r\nimport { take } from 'rxjs/operators';\r\nimport {Link, useLocation, useHistory} from \"react-router-dom\";\r\nimport { Container, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n});\r\n\r\nconst Products = () => {\r\n    const classes = useStyles();\r\n    const [products, setProducts] = useState([]); \r\n    const location_state = useLocation().state;\r\n    let history = useHistory();\r\n    let id_store = '';\r\n    //if (location_state != null && location_state.store_id != null) {\r\n    //    id_store = location_state.store_id;\r\n    //}\r\n    useEffect(() => {\r\n        \r\n       \r\n        return () => {\r\n            // Anything in here is fired on component unmount.\r\n            console.log(\"UNMOUNT: AddStore\");\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Container maxWidth=\"xl\" className={classes.root}>\r\n           \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Products;","import React from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    useRouteMatch,\r\n    Route,\r\n    useLocation,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { Box, Container, makeStyles, Typography } from '@material-ui/core';\r\nimport { MBottomNavigation, ProductsForm, StoresForm } from '../../components/components';\r\nimport Stores from './stores';\r\nimport Orders from './orders';\r\nimport Products from './products';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n    },\r\n});\r\n\r\nconst IndexStore = () => {\r\n    let { path, url } = useRouteMatch();\r\n    let location = useLocation();\r\n    const classes = useStyles();\r\n    //const OrdersView = animated(Orders);\r\n    //const tabs = <Tabs id=\"tabs_dashboard_tiendas\" bottomNavigation=\"true\" tab_options={[{to: `${url}/MisTiendas`, label: 'Mis Tiendas', icon: 'grade'}, {to: `${url}/Ordenes`, label: 'Mis Ordenes', icon: 'local_grocery_store'}]}/>;\r\n    //const OrdersView = animated(ClientOrders);\r\n    const tabs: JSX.Element = <MBottomNavigation Id=\"tabs_store_index\" TabOptions={[{to: `${url}/MisTiendas`, label: 'Mis Tiendas', icon: <StoreIcon/>}, {to: `${url}/Ordenes`, label: 'Mis Ordenes', icon: <ListAltIcon/>}]}/>\r\n    return (\r\n        (location.pathname == '/Tiendas') ? <Redirect to={\"/Tiendas/MisTiendas\"} /> :\r\n        <Box>\r\n            <Switch>\r\n                <Route exact path=\"/Tiendas/MisTiendas\">\r\n                    <Stores/>\r\n                    {tabs}\r\n                </Route>\r\n                <Route exact path=\"/Tiendas/Ordenes\">\r\n                    <Orders/>\r\n                    {tabs}\r\n                </Route>\r\n                <Route exact path=\"/Tiendas/AgregarTienda\">\r\n                    <Container maxWidth=\"xl\" className={classes.root}>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {'Agregar nueva tienda'}\r\n                        </Typography>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m12\">\r\n                                <div className=\"card-panel\">\r\n                                    <StoresForm form_mode={'Create'}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </Route>\r\n                <Route exact path=\"/Tiendas/EditarTienda\">\r\n                    <Container maxWidth=\"xl\" className={classes.root}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                            {'Editar tienda'}\r\n                        </Typography>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m12\">\r\n                                <div className=\"card-panel\">\r\n                                    <StoresForm form_mode={'Edit'}/>\r\n                                </div>\r\n                            </div>\r\n                       </div>\r\n                    </Container>\r\n                </Route>\r\n                <Route exact path=\"/Tiendas/Productos\">\r\n                    <Products/>\r\n                </Route>\r\n                <Route exact path=\"/Tiendas/Productos/AgregarProducto\">\r\n                    <Container maxWidth=\"xl\" className={classes.root}>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                            {'Agregar nuevo producto'}\r\n                        </Typography>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m12\">\r\n                                <div className=\"card-panel\">\r\n                                    <ProductsForm form_mode={'Create'}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </Route>\r\n            </Switch>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default IndexStore;","import ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {About, Home, Users, Splash, IndexClients, DashboardStore, ViewNotFound, LogIn} from './views/views';\nimport { Footer, MapView} from './components/components';\nimport NavigationBar from './components/shared/NavigationBar';\nimport React, {Component, useState} from 'react'; \nimport { Container, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport theme from './assets/js/theme';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tLink\n} from \"react-router-dom\";\nimport IndexStore from './views/stores';\n\n\nconst App = () => {\n\tconst [showSplash, setSplash] = useState(false);\n\treturn (\n\t\t(showSplash) ? \n\t\t<Splash onLoadingComplete={(loading_state: boolean) => { setSplash(loading_state)}}/> :\n\t\t<div>\n\t\t\t{/* A <Switch> looks through its children <Route>s and\n\t\t\t\trenders the first one that matches the current URL. */}\n\t\t\t<NavigationBar/>\t\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/Clientes\">\n\t\t\t\t\t<IndexClients/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/Tiendas\">\n\t\t\t\t\t<IndexStore/>\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<LogIn />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t<ViewNotFound />\n\t\t\t\t</Route>\n\t\t\t</Switch>\t\n\t\t</div>\n\t)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t{/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n\t\t\t<Router>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<App/>\n\t\t\t</Router>\n  \t\t</ThemeProvider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}